/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockCurve } from "./MockCurve";

export class MockCurveFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockCurve> {
    return super.deploy(overrides || {}) as Promise<MockCurve>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockCurve {
    return super.attach(address) as MockCurve;
  }
  connect(signer: Signer): MockCurveFactory {
    return super.connect(signer) as MockCurveFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCurve {
    return new Contract(address, _abi, signerOrProvider) as MockCurve;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "amounts",
        type: "uint256[4]",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "calc_token_amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_virtual_price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "set_withdraw_price",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a764000060005534801561001c57600080fd5b5061014f8061002c6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633142dc36146100515780638726972914610070578063bb7b8b801461008a578063cf701ff714610092575b600080fd5b61006e6004803603602081101561006757600080fd5b50356100e6565b005b6100786100eb565b60408051918252519081900360200190f35b6100786100f1565b610078600480360360a08110156100a857600080fd5b8101908080608001906004806020026040519081016040528092919082600460200280828437600092019190915250919450505035151590506100f7565b600055565b60005481565b60005490565b600080546060840151670de0b6b3a7640000028161011157fe5b04939250505056fea2646970667358221220029b9816876c554761f6119315810ed1bc7590b7f0088cbfab7702b7e9b5327d64736f6c634300060a0033";
