/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockCurveGauge } from "./MockCurveGauge";

export class MockCurveGaugeFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockCurveGauge> {
    return super.deploy(overrides || {}) as Promise<MockCurveGauge>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockCurveGauge {
    return super.attach(address) as MockCurveGauge;
  }
  connect(signer: Signer): MockCurveGaugeFactory {
    return super.connect(signer) as MockCurveGaugeFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCurveGauge {
    return new Contract(address, _abi, signerOrProvider) as MockCurveGauge;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "contract ICurveMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061011c806100206000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80630754617214604b5780632e1a7d4d14607a57806370a08231146096578063b6b55f2514607a575b600080fd5b605160d8565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b609460048036036020811015608e57600080fd5b503560dd565b005b60c66004803603602081101560aa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1660e0565b60408051918252519081900360200190f35b600090565b50565b5060009056fea2646970667358221220eaa1d27e3fb5fccc2b46428ccb9fb03819ce5c2f021caa2acd4a96d62fb169f164736f6c634300060a0033";
