/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Contract,
  ContractFactory,
  PayableOverrides,
} from "@ethersproject/contracts";

import type { ForceEther } from "./ForceEther";

export class ForceEtherFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: PayableOverrides): Promise<ForceEther> {
    return super.deploy(overrides || {}) as Promise<ForceEther>;
  }
  getDeployTransaction(overrides?: PayableOverrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ForceEther {
    return super.attach(address) as ForceEther;
  }
  connect(signer: Signer): ForceEtherFactory {
    return super.connect(signer) as ForceEtherFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForceEther {
    return new Contract(address, _abi, signerOrProvider) as ForceEther;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "destroyAndSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260ae806100126000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f5074f4114602d575b600080fd5b605d60048036036020811015604157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16605f565b005b8073ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220c56fdcdeb2037b00832ad8927078c5bcc794b8af2634d5ba5555128a1192afae64736f6c634300060a0033";
